<?php
// This script and data application were generated by AppGini 22.14
// Download AppGini for free from https://bigprof.com/appgini/download/

	include_once(__DIR__ . '/lib.php');
	@include_once(__DIR__ . '/hooks/workorders.php');
	include_once(__DIR__ . '/workorders_dml.php');

	// mm: can the current member access this page?
	$perm = getTablePermissions('workorders');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied']);
		exit;
	}

	$x = new DataList;
	$x->TableName = 'workorders';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`workorders`.`wo_ID`" => "wo_ID",
		"if(CHAR_LENGTH(`workorders`.`wo_createdby`)>64, concat(left(`workorders`.`wo_createdby`,64),' ...'), `workorders`.`wo_createdby`)" => "wo_createdby",
		"if(CHAR_LENGTH(`workorders`.`wo_datecreated`)>64, concat(left(`workorders`.`wo_datecreated`,64),' ...'), `workorders`.`wo_datecreated`)" => "wo_datecreated",
		"if(CHAR_LENGTH(`workorders`.`wo_Status`)>64, concat(left(`workorders`.`wo_Status`,64),' ...'), `workorders`.`wo_Status`)" => "wo_Status",
		"IF(    CHAR_LENGTH(`techs1`.`techID`) || CHAR_LENGTH(`techs1`.`techName`), CONCAT_WS('',   `techs1`.`techID`, ' - ', `techs1`.`techName`), '') /* Assigned to Tech */" => "wo_assignedto",
		"IF(    CHAR_LENGTH(`clients1`.`id`) || CHAR_LENGTH(`clients1`.`name`), CONCAT_WS('',   `clients1`.`id`, ' - ', `clients1`.`name`), '') /* Client */" => "wo_client",
		"if(CHAR_LENGTH(`workorders`.`wo_ticket`)>64, concat(left(`workorders`.`wo_ticket`,64),' ...'), `workorders`.`wo_ticket`)" => "wo_ticket",
		"IF(    CHAR_LENGTH(`clients2`.`id`) || CHAR_LENGTH(`clients2`.`name`) || CHAR_LENGTH(`assets1`.`asset_serial`), CONCAT_WS('',   `clients2`.`id`, ' - ', `clients2`.`name`, ' - ', `assets1`.`asset_serial`), '') /* Client Asset/Device */" => "wo_asset",
		"if(CHAR_LENGTH(`workorders`.`wo_Title`)>128, concat(left(`workorders`.`wo_Title`,128),' ...'), `workorders`.`wo_Title`)" => "wo_Title",
		"if(CHAR_LENGTH(`workorders`.`wo_Description`)>128, concat(left(`workorders`.`wo_Description`,128),' ...'), `workorders`.`wo_Description`)" => "wo_Description",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`workorders`.`wo_ID`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => 7,
		8 => 8,
		9 => 9,
		10 => 10,
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`workorders`.`wo_ID`" => "wo_ID",
		"`workorders`.`wo_createdby`" => "wo_createdby",
		"`workorders`.`wo_datecreated`" => "wo_datecreated",
		"`workorders`.`wo_Status`" => "wo_Status",
		"IF(    CHAR_LENGTH(`techs1`.`techID`) || CHAR_LENGTH(`techs1`.`techName`), CONCAT_WS('',   `techs1`.`techID`, ' - ', `techs1`.`techName`), '') /* Assigned to Tech */" => "wo_assignedto",
		"IF(    CHAR_LENGTH(`clients1`.`id`) || CHAR_LENGTH(`clients1`.`name`), CONCAT_WS('',   `clients1`.`id`, ' - ', `clients1`.`name`), '') /* Client */" => "wo_client",
		"`workorders`.`wo_ticket`" => "wo_ticket",
		"IF(    CHAR_LENGTH(`clients2`.`id`) || CHAR_LENGTH(`clients2`.`name`) || CHAR_LENGTH(`assets1`.`asset_serial`), CONCAT_WS('',   `clients2`.`id`, ' - ', `clients2`.`name`, ' - ', `assets1`.`asset_serial`), '') /* Client Asset/Device */" => "wo_asset",
		"`workorders`.`wo_Title`" => "wo_Title",
		"`workorders`.`wo_Description`" => "wo_Description",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`workorders`.`wo_ID`" => "Work Order ID",
		"`workorders`.`wo_createdby`" => "Created By",
		"`workorders`.`wo_datecreated`" => "Date Created",
		"`workorders`.`wo_Status`" => "Status",
		"IF(    CHAR_LENGTH(`techs1`.`techID`) || CHAR_LENGTH(`techs1`.`techName`), CONCAT_WS('',   `techs1`.`techID`, ' - ', `techs1`.`techName`), '') /* Assigned to Tech */" => "Assigned to Tech",
		"IF(    CHAR_LENGTH(`clients1`.`id`) || CHAR_LENGTH(`clients1`.`name`), CONCAT_WS('',   `clients1`.`id`, ' - ', `clients1`.`name`), '') /* Client */" => "Client",
		"`workorders`.`wo_ticket`" => "Ticket/Reference Number",
		"IF(    CHAR_LENGTH(`clients2`.`id`) || CHAR_LENGTH(`clients2`.`name`) || CHAR_LENGTH(`assets1`.`asset_serial`), CONCAT_WS('',   `clients2`.`id`, ' - ', `clients2`.`name`, ' - ', `assets1`.`asset_serial`), '') /* Client Asset/Device */" => "Client Asset/Device",
		"`workorders`.`wo_Title`" => "Title",
		"`workorders`.`wo_Description`" => "Description of Issue",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`workorders`.`wo_ID`" => "wo_ID",
		"`workorders`.`wo_createdby`" => "Created By",
		"`workorders`.`wo_datecreated`" => "Date Created",
		"`workorders`.`wo_Status`" => "Status",
		"IF(    CHAR_LENGTH(`techs1`.`techID`) || CHAR_LENGTH(`techs1`.`techName`), CONCAT_WS('',   `techs1`.`techID`, ' - ', `techs1`.`techName`), '') /* Assigned to Tech */" => "wo_assignedto",
		"IF(    CHAR_LENGTH(`clients1`.`id`) || CHAR_LENGTH(`clients1`.`name`), CONCAT_WS('',   `clients1`.`id`, ' - ', `clients1`.`name`), '') /* Client */" => "wo_client",
		"`workorders`.`wo_ticket`" => "Ticket/Reference Number",
		"IF(    CHAR_LENGTH(`clients2`.`id`) || CHAR_LENGTH(`clients2`.`name`) || CHAR_LENGTH(`assets1`.`asset_serial`), CONCAT_WS('',   `clients2`.`id`, ' - ', `clients2`.`name`, ' - ', `assets1`.`asset_serial`), '') /* Client Asset/Device */" => "wo_asset",
		"`workorders`.`wo_Title`" => "Title",
		"`workorders`.`wo_Description`" => "Description of Issue",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['wo_assignedto' => 'Assigned to Tech', 'wo_client' => 'Client', 'wo_asset' => 'Client Asset/Device', ];

	$x->QueryFrom = "`workorders` LEFT JOIN `techs` as techs1 ON `techs1`.`techID`=`workorders`.`wo_assignedto` LEFT JOIN `clients` as clients1 ON `clients1`.`id`=`workorders`.`wo_client` LEFT JOIN `assets` as assets1 ON `assets1`.`asset_ID`=`workorders`.`wo_asset` LEFT JOIN `clients` as clients2 ON `clients2`.`id`=`assets1`.`asset_client` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = (getLoggedAdmin() !== false);
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 100;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'workorders_view.php';
	$x->TableTitle = 'Work Orders';
	$x->TableIcon = 'table.gif';
	$x->PrimaryKey = '`workorders`.`wo_ID`';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['Work Order ID', 'Created By', 'Date Created', 'Status', 'Assigned to Tech', 'Client', 'Ticket/Reference Number', 'Client Asset/Device', 'Title', ];
	$x->ColFieldName = ['wo_ID', 'wo_createdby', 'wo_datecreated', 'wo_Status', 'wo_assignedto', 'wo_client', 'wo_ticket', 'wo_asset', 'wo_Title', ];
	$x->ColNumber  = [1, 2, 3, 4, 5, 6, 7, 8, 9, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/workorders_templateTV.html';
	$x->SelectedTemplate = 'templates/workorders_templateTVS.html';
	$x->TemplateDV = 'templates/workorders_templateDV.html';
	$x->TemplateDVP = 'templates/workorders_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// hook: workorders_init
	$render = true;
	if(function_exists('workorders_init')) {
		$args = [];
		$render = workorders_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: workorders_header
	$headerCode = '';
	if(function_exists('workorders_header')) {
		$args = [];
		$headerCode = workorders_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once(__DIR__ . '/header.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/header.php');
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: workorders_footer
	$footerCode = '';
	if(function_exists('workorders_footer')) {
		$args = [];
		$footerCode = workorders_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once(__DIR__ . '/footer.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/footer.php');
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
